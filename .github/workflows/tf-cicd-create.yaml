name: CI/CD Pipeline for Terraform

on:
  workflow_call:
    inputs:
      deploy-reviewer-test:
        description: 'Specifies the GitHub User Id who can approve test deployment.'
        required: true
        type: number
      deploy-reviewer-prod:
        description: 'Specifies the GitHub User Id who can approve prod deployment.'
        required: true
        type: number
      pr-approver:
        description: 'Specifies the GitHub User who can approve a Pull Request.'
        required: true
        type: string
    secrets: 
      git-token:
        required: true
      aws-region: 
        required: true
      devl-aws-role-arn: 
        required: true
      devl-kms-key-arn: 
        required: true
      devl-aws-tf-state-bucket-name: 
        required: true
      test-aws-role-arn: 
        required: true
      test-kms-key-arn: 
        required: true
      test-aws-tf-state-bucket-name: 
        required: true
      prod-aws-role-arn: 
        required: true
      prod-kms-key-arn: 
        required: true
      prod-aws-tf-state-bucket-name: 
        required: true

permissions:
  id-token: write       # This is required for aws oidc connection
  contents: write        # This is required for actions/checkout
  pull-requests: write  # This is required for gh bot to comment PR  
  issues: write

jobs:
  _1-setup:
    uses: ./.github/workflows/setup-repository.yaml
    with:
      deploy-reviewer-test: ${{ inputs.deploy-reviewer-test }}
      deploy-reviewer-prod: ${{ inputs.deploy-reviewer-prod }}
      pr-approver: ${{ inputs.pr-approver }}
    secrets:
      git-token: ${{ secrets.git-token }}
  _2-1-1-tf-lint:
    needs: [ _1-setup ]
    if: startsWith(github.ref, 'refs/heads/feature') 
    uses: ./.github/workflows/tf-lint.yaml
    with:
      tflint-ver: ${{ vars.TF_LINT_VERSION }}
  _2-1-2-validate:
    needs: [ _1-setup ]
    if: startsWith(github.ref, 'refs/heads/feature') 
    uses: ./.github/workflows/tf-validate.yaml
    with:
      terraform-ver: ${{ vars.TERRAFORM_VERSION }}

  # _2-2-devl:
  #   # name: Devl
  #   if: github.ref == 'refs/heads/main'
  #   needs: [ _1-setup ]
  #   uses: ./.github/workflows/tf-plan-validate.yaml
  #   with:
  #     github-env: devl
  #     tfvar-file: devl.terraform.tfvars
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.devl-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.devl-kms-key-arn }}
  #     aws-tf-state-bucket-name: ${{ secrets.devl-aws-tf-state-bucket-name }}
  # _2-3-test:
  #   # name: Test
  #   if: github.ref == 'refs/heads/main'
  #   needs: [ _1-setup ]
  #   uses: ./.github/workflows/tf-plan-validate.yaml
  #   with:
  #     github-env: test
  #     tfvar-file: test.terraform.tfvars
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.test-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.test-kms-key-arn }}
  #     aws-tf-state-bucket-name: ${{ secrets.test-aws-tf-state-bucket-name }}
  # _2-4-prod:
  #   # name: Prod
  #   if: github.ref == 'refs/heads/main'
  #   needs: [ _1-setup ]
  #   uses: ./.github/workflows/tf-plan-validate.yaml
  #   with:
  #     github-env: prod
  #     tfvar-file: prod.terraform.tfvars
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.prod-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.prod-kms-key-arn }}
  #     aws-tf-state-bucket-name: ${{ secrets.prod-aws-tf-state-bucket-name }}
  _3-1-tf-plan-feature:
    # name: Feature
    needs: [ _2-1-1-tf-lint, _2-1-2-validate ]
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    uses: ./.github/workflows/tf-plan.yaml
    with:
      github-env: feature
      terraform-ver: ${{ vars.TERRAFORM_VERSION }}
      tfvar-file: devl.terraform.tfvars
    secrets:
      aws-region: ${{ secrets.aws-region }}
      aws-role-arn: ${{ secrets.devl-aws-role-arn }}
      kms-key-arn: ${{ secrets.devl-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ secrets.devl-aws-tf-state-bucket-name }}
  # _3-2-devl:
  #   # name: Devl
  #   if: github.ref == 'refs/heads/main'
  #   needs: [ _2-2-devl ]
  #   uses: ./.github/workflows/tf-apply.yaml
  #   with:
  #     github-env: devl
  #     tfvar-file: devl.terraform.tfvars
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.devl-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.devl-kms-key-arn }}
  #     aws-tf-state-bucket-name: ${{ secrets.devl-aws-tf-state-bucket-name }}
  # _4-2-test:
  #   # name: Test
  #   if: github.ref == 'refs/heads/main'
  #   needs: [ _2-3-test,_3-2-devl ]
  #   uses: ./.github/workflows/tf-apply.yaml
  #   with:
  #     github-env: test
  #     tfvar-file: test.terraform.tfvars
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.test-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.test-kms-key-arn }}
  #     aws-tf-state-bucket-name: ${{ secrets.test-aws-tf-state-bucket-name }}
  # _5-2-prod:
  #   # name: Prod
  #   if: github.ref == 'refs/heads/main'
  #   needs: [_2-4-prod,_3-2-devl, _4-2-test ]
  #   uses: ./.github/workflows/tf-apply.yaml
  #   with:
  #     github-env: prod
  #     tfvar-file: prod.terraform.tfvars
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.prod-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.prod-kms-key-arn }}
  #     aws-tf-state-bucket-name: ${{ secrets.prod-aws-tf-state-bucket-name }}
  # _4-1-feature:
  #   # name: Feature
  #   if: startsWith(github.ref, 'refs/heads/feature')
  #   needs: [ _3-1-feature ]
  #   uses: ./.github/workflows/tf-destroy.yaml
  #   with:
  #     github-env: feature
  #     tfvar-file: devl.terraform.tfvars
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.devl-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.devl-kms-key-arn }}
  #     aws-tf-state-bucket-name: ${{ secrets.devl-aws-tf-state-bucket-name }}
  # _5-1-create-release:
  #   # name: Release
  #   needs: [ _4-1-feature ]
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #     id-token: write
  #   uses: ./.github/workflows/release.yaml
  # _6-1-create-pr:
  #   # name: Create Pull Request
  #   needs: [_5-1-create-release]
  #   uses: ./.github/workflows/tf-create-pr.yaml
  #   with:
  #     pr-title: "Pull Request to merge ${{ github.ref_name }} with main"
  #     pr-approver: ${{ inputs.pr-approver }}
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.devl-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.devl-kms-key-arn }}
  #     aws-tf-state-bucket-name: ${{ secrets.devl-aws-tf-state-bucket-name }}
  #     git-token: ${{ secrets.git-token }}
