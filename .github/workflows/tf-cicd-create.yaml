name: CI/CD Pipeline for Terraform

'on':
  workflow_call:
    inputs:
      deploy-reviewer-test:
        description: Specifies the GitHub User Id who can approve test deployment.
        required: true
        type: number
      deploy-reviewer-prod:
        description: Specifies the GitHub User Id who can approve prod deployment.
        required: true
        type: number
      pr-approver:
        description: Specifies the GitHub User who can approve a Pull Request.
        required: true
        type: string
      aws-region:
        description: 'Specifies the AWS Region.'
        required: true
        type: string
        required: true
      devl-aws-role-arn:
        description: 'Specifies the AWS IAM Role arn in development environment.'
        required: true
        type: string
      devl-kms-key-arn:
        description: 'Specifies the AWS KMS Key arn in development environment.'
        required: true
        type: string
      devl-aws-tf-state-bucket-name:
        description: 'Specifies the AWS Terraform state S3 bucket name in development environment.'
        required: true
        type: string
      test-aws-role-arn:
        description: 'Specifies the AWS IAM Role arn in test environment.'
        required: true
        type: string
      test-kms-key-arn:
        description: 'Specifies the AWS KMS Key arn in test environment.'
        required: true
        type: string
      test-aws-tf-state-bucket-name:
        description: 'Specifies the AWS Terraform state S3 bucket name in test environment.'
        required: true
        type: string
      prod-aws-role-arn:
        description: 'Specifies the AWS IAM Role arn in production environment.'
        required: true
        type: string
      prod-kms-key-arn:
        description: 'Specifies the AWS KMS Key arn in production environment.'
        required: true
        type: string
      prod-aws-tf-state-bucket-name:
        description: 'Specifies the AWS Terraform state S3 bucket name in production environment.'
        required: true
        type: string
    secrets:
      git-token:
        required: true

permissions:
  id-token: write # This is required for aws oidc connection
  contents: write # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR
  issues: write

jobs:
  _1-setup:
    uses: ./.github/workflows/setup-repository.yaml
    with:
      deploy-reviewer-test: ${{ inputs.deploy-reviewer-test }}
      deploy-reviewer-prod: ${{ inputs.deploy-reviewer-prod }}
      pr-approver: ${{ inputs.pr-approver }}
    secrets:
      git-token: ${{ secrets.git-token }}
  _2-1-1-tf-lint:
    needs:
      - _1-setup
    if: startsWith(github.ref, 'refs/heads/feature')
    uses: ./.github/workflows/tf-lint.yaml
    with:
      tflint-ver: ${{ vars.TF_LINT_VERSION }}
  _2-1-2-validate:
    needs:
      - _1-setup
    if: startsWith(github.ref, 'refs/heads/feature')
    uses: ./.github/workflows/tf-validate.yaml
    with:
      terraform-ver: ${{ vars.TERRAFORM_VERSION }}
  _2-2-tf-plan-devl:
    if: github.ref == 'refs/heads/main'
    needs:
      - _1-setup
    uses: ./.github/workflows/tf-plan.yaml
    with:
      github-env: devl
      tfvar-file: devl.terraform.tfvars
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.devl-aws-role-arn }}
      kms-key-arn: ${{ inputs.devl-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.devl-aws-tf-state-bucket-name }}
  _2-3-tf-plan-test:
    if: github.ref == 'refs/heads/main'
    needs:
      - _1-setup
    uses: ./.github/workflows/tf-plan.yaml
    with:
      github-env: test
      tfvar-file: test.terraform.tfvars
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.test-aws-role-arn }}
      kms-key-arn: ${{ inputs.test-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.test-aws-tf-state-bucket-name }}
  _2-4-tf-plan-prod:
    if: github.ref == 'refs/heads/main'
    needs:
      - _1-setup
    uses: ./.github/workflows/tf-plan.yaml
    with:
      github-env: prod
      tfvar-file: prod.terraform.tfvars
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.prod-aws-role-arn }}
      kms-key-arn: ${{ inputs.prod-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.prod-aws-tf-state-bucket-name }}
  _3-1-tf-plan-feature:
    needs:
      - _2-1-1-tf-lint
      - _2-1-2-validate
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    uses: ./.github/workflows/tf-plan.yaml
    with:
      github-env: feature
      terraform-ver: ${{ vars.TERRAFORM_VERSION }}
      tfvar-file: devl.terraform.tfvars
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.devl-aws-role-arn }}
      kms-key-arn: ${{ inputs.devl-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.devl-aws-tf-state-bucket-name }}
  _3-2-tf-apply-devl:
    needs:
      - _2-2-tf-plan-devl
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
    uses: ./.github/workflows/tf-apply.yaml
    with:
      github-env: devl
      terraform-ver: ${{ vars.TERRAFORM_VERSION }}
      tfvar-file: devl.terraform.tfvars
      issue-number: ${{ github.event.issue.number }}
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.devl-aws-role-arn }}
      kms-key-arn: ${{ inputs.devl-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.devl-aws-tf-state-bucket-name }}
    secrets:
      git-token: ${{ secrets.git-token }}
  _3-3-tf-apply-test:
    if: github.ref == 'refs/heads/main'
    needs:
      - _3-2-tf-apply-devl
      - _2-3-tf-plan-test
    uses: ./.github/workflows/tf-apply.yaml
    with:
      github-env: test
      tfvar-file: test.terraform.tfvars
      issue-number: ${{ github.event.issue.number }}
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.test-aws-role-arn }}
      kms-key-arn: ${{ inputs.test-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ secrets.test-aws-tf-state-bucket-name }}
    secrets:
      git-token: ${{ secrets.git-token }}
  _3-4-tf-apply-prod:
    needs:
      - _2-4-tf-plan-prod
      - _3-3-tf-apply-test
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
    uses: ./.github/workflows/tf-apply.yaml
    with:
      github-env: prod
      terraform-ver: ${{ vars.TERRAFORM_VERSION }}
      tfvar-file: prod.terraform.tfvars
      issue-number: ${{ github.event.issue.number }}
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.prod-aws-role-arn }}
      kms-key-arn: ${{ inputs.prod-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.prod-aws-tf-state-bucket-name }}
    secrets:
      git-token: ${{ secrets.git-token }}
  _4-1-tf-apply-feature:
    needs:
      - _3-1-tf-plan-feature
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    uses: ./.github/workflows/tf-apply.yaml
    with:
      github-env: feature
      terraform-ver: ${{ vars.TERRAFORM_VERSION }}
      tfvar-file: devl.terraform.tfvars
      issue-number: ${{ github.event.issue.number }}
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.devl-aws-role-arn }}
      kms-key-arn: ${{ inputs.devl-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.devl-aws-tf-state-bucket-name }}
    secrets:
      git-token: ${{ secrets.git-token }}
  _5-1-tf-destroy-feature:
    needs:
      - _4-1-tf-apply-feature
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    uses: ./.github/workflows/tf-destroy.yaml
    with:
      github-env: feature
      terraform-ver: ${{ vars.TERRAFORM_VERSION }}
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.devl-aws-role-arn }}
      kms-key-arn: ${{ inputs.devl-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.devl-aws-tf-state-bucket-name }}
  _6-1-create-release:
    needs:
      - _5-1-tf-destroy-feature
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    uses: ./.github/workflows/release.yaml
  _7-1-create-pr:
    needs:
      - _6-1-create-release
    uses: ./.github/workflows/tf-create-pr.yaml
    with:
      pr-title: Pull Request to merge ${{ github.ref_name }} with main
      pr-approver: ${{ inputs.pr-approver }}
    # secrets:
      aws-region: ${{ inputs.aws-region }}
      aws-role-arn: ${{ inputs.devl-aws-role-arn }}
      kms-key-arn: ${{ inputs.devl-kms-key-arn }}
      aws-tf-state-bucket-name: ${{ inputs.devl-aws-tf-state-bucket-name }}
    secrets:
      git-token: ${{ secrets.git-token }}