name: CI/CD Pipeline for AWS CloudFormation
run-name: Deploy
'on':
  workflow_call:
    inputs:
      deploy-reviewer-test:
        description: Specifies the GitHub User Id who can approve test deployment.
        required: true
        type: string
      deploy-reviewer-prod:
        description: Specifies the GitHub User Id who can approve prod deployment.
        required: true
        type: string
      pr-approver:
        description: Specifies the GitHub User who can approve a Pull Request.
        required: true
        type: string
    secrets:
      git-token:
        required: true
      aws-region:
        required: true
      devl-aws-role-arn:
        required: true
      devl-kms-key-arn:
        required: true
      devl-code-repository-s3-bucket:
        required: true
      test-aws-role-arn:
        required: true
      test-kms-key-arn:
        required: true
      test-code-repository-s3-bucket:
        required: true
      prod-aws-role-arn:
        required: true
      prod-kms-key-arn:
        required: true
      prod-code-repository-s3-bucket:
        required: true
      dockerhub-username:
        required: false
      dockerhub-token:
        required: false
permissions:
  id-token: write
  contents: write
  pull-requests: write
  issues: write
jobs:
  _1-0-begin:
    name: Begin
    uses: ./.github/workflows/cf-start.yaml
    with:
      deploy-reviewer-test: ${{ inputs.deploy-reviewer-test }}
      deploy-reviewer-prod: ${{ inputs.deploy-reviewer-prod }}
      pr-approver: ${{ inputs.pr-approver }}
  _1-1-setup:
    name: Setup Repository
    needs: [ _1-0-begin ]
    if: startsWith(github.ref, 'refs/heads/feature')
    uses: ./.github/workflows/cf-setup-repository.yaml
    with:
      deploy-reviewer-test: ${{ needs._1-0-begin.outputs.deploy-reviewer-test }}
      deploy-reviewer-prod: ${{ needs._1-0-begin.outputs.deploy-reviewer-prod }}
      pr-approver: ${{ needs._1-0-begin.outputs.pr-approver }}
    secrets:
      git-token: ${{ secrets.git-token }}
  _1-2-init-pipeline:
    name: Init. Pipeline
    needs: [ _1-1-setup ]
    if: startsWith(github.ref, 'refs/heads/feature')
    uses: ./.github/workflows/cf-init-pipeline.yaml
  _1-3-upload_template:
    name: Upload CFT Template
    needs: [ _1-2-init-pipeline  ]
    if: ${{ always() && startsWith(github.ref, 'refs/heads/feature') && fromJSON(needs._1-2-init-pipeline.outputs.files-changed).template_changed == 'true' }}
    uses: ./.github/workflows/cf-upload-template.yaml
    with:
      github-sha: ${{ github.sha }}
    secrets:
      aws-region: ${{ secrets.aws-region }}
      aws-role-arn: ${{ secrets.devl-aws-role-arn }}
      kms-key-arn: ${{ secrets.devl-kms-key-arn }}
      code-repository-s3-bucket: ${{ secrets.devl-code-repository-s3-bucket }}
  _1-3-upload_lambda_code:
    name: Upload Lambda Code
    needs: [ _1-2-init-pipeline  ]
    if: ${{ always() && startsWith(github.ref, 'refs/heads/feature') && fromJSON(needs._1-2-init-pipeline.outputs.files-changed).lambda_code_changed == 'true' }}
    uses: ./.github/workflows/cf-upload-lambda-code.yaml
    with:
      github-sha: ${{ github.sha }}
    secrets:
      aws-region: ${{ secrets.aws-region }}
      aws-role-arn: ${{ secrets.devl-aws-role-arn }}
      kms-key-arn: ${{ secrets.devl-kms-key-arn }}
      code-repository-s3-bucket: ${{ secrets.devl-code-repository-s3-bucket }}
  _1-3-upload_glue_code:
    name: Upload Glue Code
    needs: [ _1-2-init-pipeline  ]
    if: ${{ always() && startsWith(github.ref, 'refs/heads/feature') && fromJSON(needs._1-2-init-pipeline.outputs.files-changed).glue_code_changed == 'true' }}
    uses: ./.github/workflows/cf-upload-glue-code.yaml
    with:
      github-sha: ${{ github.sha }}
    secrets:
      aws-region: ${{ secrets.aws-region }}
      aws-role-arn: ${{ secrets.devl-aws-role-arn }}
      kms-key-arn: ${{ secrets.devl-kms-key-arn }}
      code-repository-s3-bucket: ${{ secrets.devl-code-repository-s3-bucket }}
  # # _1-5-build_docker_image:
  _1-3-upload_asl_file:
    name: Upload ASL Json
    needs: [ _1-2-init-pipeline  ]
    if: ${{ always() && startsWith(github.ref, 'refs/heads/feature') && fromJSON(needs._1-2-init-pipeline.outputs.files-changed).asl_file_changed == 'true' }}
    uses: ./.github/workflows/cf-upload-asl-file.yaml
    with:
      github-sha: ${{ github.sha }}
    secrets:
      aws-region: ${{ secrets.aws-region }}
      aws-role-arn: ${{ secrets.devl-aws-role-arn }}
      kms-key-arn: ${{ secrets.devl-kms-key-arn }}
      code-repository-s3-bucket: ${{ secrets.devl-code-repository-s3-bucket }}
  # _1-7-upload_lambda_layer_code:
  _1-4-create-feature:
    name: Create Feature
    needs:
      - _1-2-init-pipeline
      - _1-3-upload_template
      - _1-3-upload_lambda_code
      - _1-3-upload_glue_code
      - _1-3-upload_asl_file
    if: ${{ always() && startsWith(github.ref, 'refs/heads/feature') }}
    uses: ./.github/workflows/cf-create.yaml
    with:
      github-env: feature
      github-sha: ${{ github.sha }}
      cft-upload-status: ${{ needs._1-3-upload_template.outputs.cft-upload-status }}
      lambda-code-upload-status: ${{ needs._1-3-upload_lambda_code.outputs.lambda-code-upload-status }}
      glue-code-upload-status: ${{ needs._1-3-upload_glue_code.outputs.glue-code-upload-status }}
      asl-file-upload-status: ${{ needs._1-3-upload_asl_file.outputs.asl-file-upload-status }}
    secrets:
      aws-region: ${{ secrets.aws-region }}
      aws-role-arn: ${{ secrets.devl-aws-role-arn }}
      kms-key-arn: ${{ secrets.devl-kms-key-arn }}
      code-repository-s3-bucket: ${{ secrets.devl-code-repository-s3-bucket }}
  # _1-4-delete:
  #   name: Delete Feature
  #   needs:
  #     - _1-3-feature
  #   if: startsWith(github.ref, 'refs/heads/feature')
  #   uses: ./.github/workflows/cf-delete.yaml
  #   with:
  #     github-env: feature
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.devl-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.devl-kms-key-arn }}
  #     code-repository-s3-bucket: ${{ secrets.devl-code-repository-s3-bucket }}
  # _1-5-release:
  #   name: Release
  #   needs:
  #     - _1-4-delete
  #   if: startsWith(github.ref, 'refs/heads/feature')
  #   uses: ./.github/workflows/release.yaml
  # _1-6-create-pr:
  #   name: Pull Request
  #   needs:
  #     - _1-5-release
  #   if: startsWith(github.ref, 'refs/heads/feature')
  #   uses: ./.github/workflows/cf-create-pr.yaml
  #   with:
  #     pr-title: Merge ${{ github.ref_name }} with main
  #     pr-approver: ${{ inputs.pr-approver }}
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.devl-aws-role-arn }}
  #     code-repository-s3-bucket: ${{ secrets.devl-code-repository-s3-bucket }}
  #     git-token: ${{ secrets.git-token }}
  # _2-1-devl:
  #   name: Deploy Devl
  #   needs:
  #     - _1-0-start
  #   if: startsWith(github.ref, 'refs/heads/main')
  #   uses: ./.github/workflows/cf-create.yaml
  #   with:
  #     github-env: devl
  #     cfn-template-path: ${{ needs._1-3-feature.outputs.cfn-template-path }}
  #     cft-upload-status: ${{ needs._1-3-feature.outputs.cft-upload-status }}
  #     lambda-code-upload-status: ${{ needs._1-3-feature.outputs.lambda-code-upload-status }}
  #     lambda-functions-changed: ${{ needs._1-3-feature.outputs.lambda-functions-changed }}
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.devl-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.devl-kms-key-arn }}
  #     code-repository-s3-bucket: ${{ secrets.devl-code-repository-s3-bucket }}
  # _2-2-test:
  #   name: Deploy Test
  #   needs:
  #     - _2-1-devl
  #   if: startsWith(github.ref, 'refs/heads/main')
  #   uses: ./.github/workflows/cf-create.yaml
  #   with:
  #     github-env: test
  #     cfn-template-path: ${{ needs._1-3-feature.outputs.cfn-template-path }}
  #     cft-upload-status: ${{ needs._1-3-feature.outputs.cft-upload-status }}
  #     lambda-code-upload-status: ${{ needs._1-3-feature.outputs.lambda-code-upload-status }}
  #     lambda-functions-changed: ${{ needs._1-3-feature.outputs.lambda-functions-changed }}
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.test-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.test-kms-key-arn }}
  #     code-repository-s3-bucket: ${{ secrets.test-code-repository-s3-bucket }}
  # _2-3-prod:
  #   name: Deploy Prod
  #   needs:
  #     - _2-2-test
  #   if: startsWith(github.ref, 'refs/heads/main')
  #   uses: ./.github/workflows/cf-create.yaml
  #   with:
  #     github-env: prod
  #     cfn-template-path: ${{ needs._1-3-feature.outputs.cfn-template-path }}
  #     cft-upload-status: ${{ needs._1-3-feature.outputs.cft-upload-status }}
  #     lambda-code-upload-status: ${{ needs._1-3-feature.outputs.lambda-code-upload-status }}
  #     lambda-functions-changed: ${{ needs._1-3-feature.outputs.lambda-functions-changed }}
  #   secrets:
  #     aws-region: ${{ secrets.aws-region }}
  #     aws-role-arn: ${{ secrets.prod-aws-role-arn }}
  #     kms-key-arn: ${{ secrets.prod-kms-key-arn }}
  #     code-repository-s3-bucket: ${{ secrets.prod-code-repository-s3-bucket }}